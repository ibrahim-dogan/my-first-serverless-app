org: ibrahimmdogann
service: my-first-api
app: my-first-serverless-app

custom:
  tableName: Candidates
  fileUploadBucket: my-file-upload-demo-with-serverless-s3

provider:
  name: aws
  runtime: nodejs12.x
  profile: default
  stage: prod
  region: us-east-1
  timeout: 30
  environment:
    tableName: ${self:custom.tableName}
    fileUploadBucket: ${self:custom.fileUploadBucket}
    region: ${self:provider.region}

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:*"
        - "s3:*"
      Resource: "*"

functions:
  createCandidate:
    handler: api/candidate/handler.create
    memorySize: 128
    description: Add a new candidate.
    events:
      - http:
          path: candidate
          method: post

  readCandidate:
    handler: api/candidate/handler.read
    memorySize: 128
    description: Gathers a candidates information.
    events:
      - http:
          path: candidate/{organisationId}/{jobId}/{email}
          method: get

  updateCandidate:
    handler: api/candidate/handler.update
    memorySize: 128
    description: Updates candidates information.
    events:
      - http:
          path: candidate/{organisationId}/{jobId}/{email}
          method: patch

  deleteCandidate:
    handler: api/candidate/handler.delete
    memorySize: 128
    description: Deletes a candidate.
    events:
      - http:
          path: candidate/{organisationId}/{jobId}/{email}
          method: delete
  resumeUpload:
    handler: api/resumeUpload.handler
    events:
      - http:
          path: candidate/{organisationId}/{jobId}/{email}/resume
          method: POST
  audioUpload:
    handler: api/audioUpload.handler
    events:
      - http:
          path: candidate/{organisationId}/{jobId}/{email}/audio
          method: POST

resources:
  - ${file(resources.yml)}